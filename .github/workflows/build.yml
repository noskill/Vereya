# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]
defaults:
    run:
        shell: bash -l {0}

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ubuntu-20.04, windows-2022]
    runs-on: self-hosted 
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
  test:
    needs: build
    runs-on: self-hosted 
    steps:
      - name: xvfb
        run: /usr/bin/Xvfb :99 -ac -screen 0 1024x768x24 &
      - name: start minecraft
        run: ./launch.sh &
        env: 
            DISPLAY: :99

      - name: checkout tagilmo
        uses: actions/checkout@v3
        repository: trueagi-io/minecraft-demo 
      - name: install tagilmo
        run: conda activate py31 && cd $GITHUB_WORKSPACE/minecraft-demo && pip install .

      - name: run test
        run: |
            conda activate py31 && cd $GITHUB_WORKSPACE/minecraft-demo/experiments/vereya &&
            python test_craft.py



